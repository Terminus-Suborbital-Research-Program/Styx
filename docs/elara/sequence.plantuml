@startuml
title <color:#CFECE7>Parallel Pointing + Streaming (Local Sub-GHz Wi-Fi)</color>

' --------- Global look ---------
skinparam shadowing false
skinparam backgroundColor #1E2230
skinparam defaultFontColor #EAEAEA

skinparam sequence {
  ArrowColor #CFECE7
  LifeLineBorderColor #CFECE7
  LifeLineBackgroundColor #5D6A87
  ParticipantBorderColor #CFECE7
  ParticipantBackgroundColor #2B3045
  ParticipantFontColor #EAEAEA
  GroupBorderColor #5D6A87
  GroupBackgroundColor #2B3045
  GroupHeaderFontColor #CFECE7
  DividerBackgroundColor #2B3045
  DividerBorderColor     #5D6A87
  DividerFontColor       #CFECE7
}

skinparam note {
  BackgroundColor #5D6A87
  BorderColor #CFECE7
  FontColor #EAEAEA
}

participant OBC
participant ADCS
participant SNS as "Sensors"
participant ACT as "Actuators"
participant PAY as "Radio Payload"
participant DHS as "Storage/Buffer"
participant RF  as "Local Sub-GHz\nWi-Fi Link"
participant SR  as "Sounding Rocket\n(Relay/Receiver)"

== Start science window ==
OBC -> ADCS : Begin target tracking
OBC -> PAY  : Start acquisition (IQ/spectra)
OBC -> RF   : Configure basic link (SSID/ch, rate)
OBC -> SR   : Link check

par Pointing control loop
  loop 10-20 Hz until window end
    SNS --> ADCS : q, Ï‰, status
    ADCS -> ACT  : Wheel torques
  end
else Science data pipeline
  loop continuous
    PAY --> OBC : Radio data frames
    OBC -> DHS  : Buffer + CRC + chunk + priority
    alt SR in view & link OK
      DHS -> RF : Dequeue chunks (rate-limit if needed)
      RF  --> SR : Stream science + TM
      SR  --> RF : ACK / NACK / rate hints
      RF  -> DHS : Re-queue NACKed chunks
    else SR occluded / link bad
      OBC -> DHS : Keep in ring buffer (QoS; drop oldest low-pri if full)
    end
  end
end

== Window end ==
OBC -> PAY : Stop acquisition
OBC -> ADCS: Exit tracking
note over DHS,RF
end note
@enduml
